name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'app/package-lock.json'
        
    - name: Install Wasp CLI
      run: |
        curl -sSL https://get.wasp-lang.dev/installer.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Verify Wasp installation
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        wasp version
      
    - name: Install dependencies
      run: |
        cd app
        npm ci
        
    - name: Build Wasp project (generates types)
      run: |
        cd app
        export PATH="$HOME/.local/bin:$PATH"
        wasp build
        
    - name: Run type check
      run: |
        cd app
        npm run typecheck
        
    - name: Complete build (bundle step)
      run: |
        cd app
        npm run build:bundle
        
    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: wasp-build-artifacts
        path: app/.wasp/build/
        retention-days: 1

  build-blog:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'blog/package-lock.json'
        
    - name: Install blog dependencies
      run: |
        cd blog
        npm ci
        
    - name: Build blog
      run: |
        cd blog
        npm run build
        
    - name: Upload blog artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: blog-build-artifacts
        path: blog/dist/
        retention-days: 1

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    env:
      WASP_TELEMETRY_DISABLE: 1
      JWT_SECRET: test-jwt-secret-for-ci
      WASP_WEB_CLIENT_URL: http://localhost:3000
      WASP_SERVER_URL: http://localhost:3001
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'e2e-tests/package-lock.json'
        
    - name: Install Wasp CLI
      run: |
        curl -sSL https://get.wasp-lang.dev/installer.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: wasp-build-artifacts
        path: app/.wasp/build/
        
    - name: Install app dependencies
      run: |
        cd app
        npm ci
        
    - name: Install e2e test dependencies
      run: |
        cd e2e-tests
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd e2e-tests
        npx playwright install --with-deps
        
    - name: Run e2e tests
      run: |
        cd e2e-tests
        export PATH="$HOME/.local/bin:$PATH"
        npm run ci:e2e:start &
        APP_PID=$!
        
        # Wait for app frontend and backend to be ready
        timeout 300 bash -c 'until curl -f http://localhost:3000; do sleep 5; done'
        
        # Run the tests
        npx playwright test
        
        # Cleanup
        # Gracefully terminate the app process
        kill -TERM $APP_PID || true
        # Wait up to 5 seconds for the process to exit
        for i in {1..5}; do
          if ! kill -0 $APP_PID 2>/dev/null; then
            break
          fi
          sleep 1
        done
        # Force kill if still running
        if kill -0 $APP_PID 2>/dev/null; then
          kill -KILL $APP_PID || true
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-results
        path: e2e-tests/test-results/
        retention-days: 7